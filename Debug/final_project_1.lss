
final_project_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000dfa  00000e8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dfa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800134  00800134  00000ec2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ec2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f2a  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009bb  00000000  00000000  00001f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000073a  00000000  00000000  0000290d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00003048  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000597  00000000  00000000  00003244  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000527  00000000  00000000  000037db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003d02  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	7e c0       	rjmp	.+252    	; 0x132 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ef       	ldi	r30, 0xFA	; 250
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 33       	cpi	r26, 0x34	; 52
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e3       	ldi	r26, 0x34	; 52
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 35       	cpi	r26, 0x50	; 80
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1c d2       	rcall	.+1080   	; 0x4fc <main>
  c4:	98 c6       	rjmp	.+3376   	; 0xdf6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerSet>:
//Parameter: Takes in a uChar for a PINx and the pin number
//Returns: The value of the PINx
unsigned char GetBit(unsigned char port, unsigned char number)
{
	return ( port & (0x01 << number) );
}
  c8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
  cc:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  d4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  d8:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <_avr_timer_cntcurr>
  dc:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <_avr_timer_cntcurr+0x1>
  e0:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <_avr_timer_cntcurr+0x2>
  e4:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <_avr_timer_cntcurr+0x3>
  e8:	08 95       	ret

000000ea <TimerOn>:
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f0:	8d e7       	ldi	r24, 0x7D	; 125
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 102:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 106:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 10a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 10e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 112:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 116:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 11a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <_avr_timer_cntcurr>
 11e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <_avr_timer_cntcurr+0x1>
 122:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <_avr_timer_cntcurr+0x2>
 126:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <_avr_timer_cntcurr+0x3>
 12a:	8f b7       	in	r24, 0x3f	; 63
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8f bf       	out	0x3f, r24	; 63
 130:	08 95       	ret

00000132 <__vector_13>:
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <_avr_timer_cntcurr>
 148:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <_avr_timer_cntcurr+0x1>
 14c:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <_avr_timer_cntcurr+0x2>
 150:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <_avr_timer_cntcurr+0x3>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	a1 09       	sbc	r26, r1
 158:	b1 09       	sbc	r27, r1
 15a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <_avr_timer_cntcurr>
 15e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <_avr_timer_cntcurr+0x1>
 162:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <_avr_timer_cntcurr+0x2>
 166:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <_avr_timer_cntcurr+0x3>
 16a:	89 2b       	or	r24, r25
 16c:	8a 2b       	or	r24, r26
 16e:	8b 2b       	or	r24, r27
 170:	99 f4       	brne	.+38     	; 0x198 <__vector_13+0x66>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <TimerFlag>
 178:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 17c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 180:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 184:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 188:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <_avr_timer_cntcurr>
 18c:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <_avr_timer_cntcurr+0x1>
 190:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <_avr_timer_cntcurr+0x2>
 194:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <_avr_timer_cntcurr+0x3>
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <delay_ms>:
 1aa:	18 16       	cp	r1, r24
 1ac:	19 06       	cpc	r1, r25
 1ae:	5c f0       	brlt	.+22     	; 0x1c6 <delay_ms+0x1c>
 1b0:	08 95       	ret
 1b2:	00 00       	nop
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	31 09       	sbc	r19, r1
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <delay_ms+0x8>
 1ba:	4f 5f       	subi	r20, 0xFF	; 255
 1bc:	5f 4f       	sbci	r21, 0xFF	; 255
 1be:	84 17       	cp	r24, r20
 1c0:	95 07       	cpc	r25, r21
 1c2:	19 f4       	brne	.+6      	; 0x1ca <delay_ms+0x20>
 1c4:	08 95       	ret
 1c6:	40 e0       	ldi	r20, 0x00	; 0
 1c8:	50 e0       	ldi	r21, 0x00	; 0
 1ca:	27 e0       	ldi	r18, 0x07	; 7
 1cc:	33 e0       	ldi	r19, 0x03	; 3
 1ce:	f1 cf       	rjmp	.-30     	; 0x1b2 <delay_ms+0x8>

000001d0 <LCD_WriteCommand>:
 1d0:	45 98       	cbi	0x08, 5	; 8
 1d2:	8b b9       	out	0x0b, r24	; 11
 1d4:	46 9a       	sbi	0x08, 6	; 8
 1d6:	00 00       	nop
 1d8:	46 98       	cbi	0x08, 6	; 8
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	e5 cf       	rjmp	.-54     	; 0x1aa <delay_ms>
 1e0:	08 95       	ret

000001e2 <LCD_ClearScreen>:
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	f5 cf       	rjmp	.-22     	; 0x1d0 <LCD_WriteCommand>
 1e6:	08 95       	ret

000001e8 <LCD_init>:
 1e8:	84 e6       	ldi	r24, 0x64	; 100
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	de df       	rcall	.-68     	; 0x1aa <delay_ms>
 1ee:	88 e3       	ldi	r24, 0x38	; 56
 1f0:	ef df       	rcall	.-34     	; 0x1d0 <LCD_WriteCommand>
 1f2:	86 e0       	ldi	r24, 0x06	; 6
 1f4:	ed df       	rcall	.-38     	; 0x1d0 <LCD_WriteCommand>
 1f6:	8f e0       	ldi	r24, 0x0F	; 15
 1f8:	eb df       	rcall	.-42     	; 0x1d0 <LCD_WriteCommand>
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	e9 df       	rcall	.-46     	; 0x1d0 <LCD_WriteCommand>
 1fe:	8a e0       	ldi	r24, 0x0A	; 10
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	d3 cf       	rjmp	.-90     	; 0x1aa <delay_ms>
 204:	08 95       	ret

00000206 <LCD_WriteData>:
 206:	45 9a       	sbi	0x08, 5	; 8
 208:	8b b9       	out	0x0b, r24	; 11
 20a:	46 9a       	sbi	0x08, 6	; 8
 20c:	00 00       	nop
 20e:	46 98       	cbi	0x08, 6	; 8
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	ca cf       	rjmp	.-108    	; 0x1aa <delay_ms>
 216:	08 95       	ret

00000218 <LCD_Cursor>:
 218:	81 31       	cpi	r24, 0x11	; 17
 21a:	18 f4       	brcc	.+6      	; 0x222 <LCD_Cursor+0xa>
 21c:	81 58       	subi	r24, 0x81	; 129
 21e:	d8 cf       	rjmp	.-80     	; 0x1d0 <LCD_WriteCommand>
 220:	08 95       	ret
 222:	81 55       	subi	r24, 0x51	; 81
 224:	d5 cf       	rjmp	.-86     	; 0x1d0 <LCD_WriteCommand>
 226:	08 95       	ret

00000228 <LCD_DisplayString>:
 228:	0f 93       	push	r16
 22a:	1f 93       	push	r17
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	18 2f       	mov	r17, r24
 232:	eb 01       	movw	r28, r22
 234:	d6 df       	rcall	.-84     	; 0x1e2 <LCD_ClearScreen>
 236:	88 81       	ld	r24, Y
 238:	88 23       	and	r24, r24
 23a:	51 f0       	breq	.+20     	; 0x250 <LCD_DisplayString+0x28>
 23c:	01 e0       	ldi	r16, 0x01	; 1
 23e:	01 0f       	add	r16, r17
 240:	81 2f       	mov	r24, r17
 242:	ea df       	rcall	.-44     	; 0x218 <LCD_Cursor>
 244:	89 91       	ld	r24, Y+
 246:	df df       	rcall	.-66     	; 0x206 <LCD_WriteData>
 248:	10 2f       	mov	r17, r16
 24a:	88 81       	ld	r24, Y
 24c:	81 11       	cpse	r24, r1
 24e:	f6 cf       	rjmp	.-20     	; 0x23c <LCD_DisplayString+0x14>
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	08 95       	ret

0000025a <set_PWM>:
 25a:	cf 92       	push	r12
 25c:	df 92       	push	r13
 25e:	ef 92       	push	r14
 260:	ff 92       	push	r15
 262:	6b 01       	movw	r12, r22
 264:	7c 01       	movw	r14, r24
 266:	20 e0       	ldi	r18, 0x00	; 0
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	a9 01       	movw	r20, r18
 26c:	70 d1       	rcall	.+736    	; 0x54e <__cmpsf2>
 26e:	81 11       	cpse	r24, r1
 270:	06 c0       	rjmp	.+12     	; 0x27e <set_PWM+0x24>
 272:	e1 e9       	ldi	r30, 0x91	; 145
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	88 70       	andi	r24, 0x08	; 8
 27a:	80 83       	st	Z, r24
 27c:	05 c0       	rjmp	.+10     	; 0x288 <set_PWM+0x2e>
 27e:	e1 e9       	ldi	r30, 0x91	; 145
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	83 60       	ori	r24, 0x03	; 3
 286:	80 83       	st	Z, r24
 288:	28 e5       	ldi	r18, 0x58	; 88
 28a:	39 e3       	ldi	r19, 0x39	; 57
 28c:	44 e7       	ldi	r20, 0x74	; 116
 28e:	5f e3       	ldi	r21, 0x3F	; 63
 290:	c7 01       	movw	r24, r14
 292:	b6 01       	movw	r22, r12
 294:	5c d1       	rcall	.+696    	; 0x54e <__cmpsf2>
 296:	88 23       	and	r24, r24
 298:	5c f4       	brge	.+22     	; 0x2b0 <set_PWM+0x56>
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	9f ef       	ldi	r25, 0xFF	; 255
 29e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2a2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2a6:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 2aa:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 2ae:	2b c0       	rjmp	.+86     	; 0x306 <set_PWM+0xac>
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	3c e7       	ldi	r19, 0x7C	; 124
 2b4:	42 e9       	ldi	r20, 0x92	; 146
 2b6:	57 e4       	ldi	r21, 0x47	; 71
 2b8:	c7 01       	movw	r24, r14
 2ba:	b6 01       	movw	r22, r12
 2bc:	5a d2       	rcall	.+1204   	; 0x772 <__gesf2>
 2be:	18 16       	cp	r1, r24
 2c0:	4c f4       	brge	.+18     	; 0x2d4 <set_PWM+0x7a>
 2c2:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2c6:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2ca:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 2ce:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 2d2:	19 c0       	rjmp	.+50     	; 0x306 <set_PWM+0xac>
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e4       	ldi	r19, 0x40	; 64
 2d8:	4c e9       	ldi	r20, 0x9C	; 156
 2da:	59 e4       	ldi	r21, 0x49	; 73
 2dc:	c7 01       	movw	r24, r14
 2de:	b6 01       	movw	r22, r12
 2e0:	4c d2       	rcall	.+1176   	; 0x77a <__mulsf3>
 2e2:	9b 01       	movw	r18, r22
 2e4:	ac 01       	movw	r20, r24
 2e6:	60 e8       	ldi	r22, 0x80	; 128
 2e8:	76 e9       	ldi	r23, 0x96	; 150
 2ea:	88 e9       	ldi	r24, 0x98	; 152
 2ec:	9c e4       	ldi	r25, 0x4C	; 76
 2ee:	33 d1       	rcall	.+614    	; 0x556 <__divsf3>
 2f0:	9a d1       	rcall	.+820    	; 0x626 <__fixsfsi>
 2f2:	61 50       	subi	r22, 0x01	; 1
 2f4:	71 09       	sbc	r23, r1
 2f6:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2fa:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2fe:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 302:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 306:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 30a:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 30e:	ff 90       	pop	r15
 310:	ef 90       	pop	r14
 312:	df 90       	pop	r13
 314:	cf 90       	pop	r12
 316:	08 95       	ret

00000318 <PWM_on>:
 318:	80 e5       	ldi	r24, 0x50	; 80
 31a:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 31e:	89 e0       	ldi	r24, 0x09	; 9
 320:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
 324:	08 95       	ret

00000326 <ADC_init>:


char buffer[10];

void ADC_init(){
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
 326:	ea e7       	ldi	r30, 0x7A	; 122
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	80 81       	ld	r24, Z
 32c:	80 6e       	ori	r24, 0xE0	; 224
 32e:	80 83       	st	Z, r24
 330:	08 95       	ret

00000332 <ReadADC>:

short ReadADC(uint8_t ch)
{
	//Select ADC Channel ch must be 0-7
	ch=ch&0b00000111;
	ADMUX= ADMUX & 0b11111000;
 332:	ec e7       	ldi	r30, 0x7C	; 124
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	90 81       	ld	r25, Z
 338:	98 7f       	andi	r25, 0xF8	; 248
 33a:	90 83       	st	Z, r25
	ADMUX|=ch;
 33c:	90 81       	ld	r25, Z
 33e:	87 70       	andi	r24, 0x07	; 7
 340:	98 2b       	or	r25, r24
 342:	90 83       	st	Z, r25
	

	//Start Single conversion

	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
 344:	ea e7       	ldi	r30, 0x7A	; 122
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	84 ff       	sbrs	r24, 4
 34c:	fd cf       	rjmp	.-6      	; 0x348 <ReadADC+0x16>
	//This is standard way of clearing bits in io as said in datasheets.
	//The code writes '1' but it result in setting bit to '0' !!!

	//ADCSRA|=(1<<ADIF);

	return ADC;
 34e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 352:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 356:	08 95       	ret

00000358 <speed>:
		x_state = wait;
		break;
	}
}
void speed(unsigned short x){
	if((x >580 && x < 800) || (x < 525 && x > 150))
 358:	9c 01       	movw	r18, r24
 35a:	25 54       	subi	r18, 0x45	; 69
 35c:	32 40       	sbci	r19, 0x02	; 2
 35e:	2b 3d       	cpi	r18, 0xDB	; 219
 360:	31 05       	cpc	r19, r1
 362:	28 f0       	brcs	.+10     	; 0x36e <speed+0x16>
 364:	22 55       	subi	r18, 0x52	; 82
 366:	3e 4f       	sbci	r19, 0xFE	; 254
 368:	26 37       	cpi	r18, 0x76	; 118
 36a:	31 40       	sbci	r19, 0x01	; 1
 36c:	30 f4       	brcc	.+12     	; 0x37a <speed+0x22>
	{
		set_PWM(20);
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	80 ea       	ldi	r24, 0xA0	; 160
 374:	91 e4       	ldi	r25, 0x41	; 65
 376:	71 cf       	rjmp	.-286    	; 0x25a <set_PWM>
 378:	08 95       	ret
	}
	else if((x >= 800 && x <1100) || (x <= 150 && x > 0))
 37a:	9c 01       	movw	r18, r24
 37c:	20 52       	subi	r18, 0x20	; 32
 37e:	33 40       	sbci	r19, 0x03	; 3
 380:	2c 32       	cpi	r18, 0x2C	; 44
 382:	31 40       	sbci	r19, 0x01	; 1
 384:	20 f0       	brcs	.+8      	; 0x38e <speed+0x36>
 386:	01 97       	sbiw	r24, 0x01	; 1
 388:	86 39       	cpi	r24, 0x96	; 150
 38a:	91 05       	cpc	r25, r1
 38c:	28 f4       	brcc	.+10     	; 0x398 <speed+0x40>
	{
		set_PWM(40);
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	80 e2       	ldi	r24, 0x20	; 32
 394:	92 e4       	ldi	r25, 0x42	; 66
 396:	61 cf       	rjmp	.-318    	; 0x25a <set_PWM>
 398:	08 95       	ret

0000039a <x_direction>:
	return ADC;
}

enum x_states { wait, left, right} x_state;
void x_direction(){
	switch(x_state){
 39a:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <x_state>
 39e:	81 30       	cpi	r24, 0x01	; 1
 3a0:	b1 f1       	breq	.+108    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3a2:	20 f0       	brcs	.+8      	; 0x3ac <x_direction+0x12>
 3a4:	82 30       	cpi	r24, 0x02	; 2
 3a6:	09 f4       	brne	.+2      	; 0x3aa <x_direction+0x10>
 3a8:	63 c0       	rjmp	.+198    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 3aa:	98 c0       	rjmp	.+304    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
		case wait:
			xx = ReadADC(0);
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	c1 df       	rcall	.-126    	; 0x332 <ReadADC>
 3b0:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 3b4:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
			sprintf(buffer, "X=%d        Wait", xx);
 3b8:	9f 93       	push	r25
 3ba:	8f 93       	push	r24
 3bc:	84 e0       	ldi	r24, 0x04	; 4
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	9f 93       	push	r25
 3c2:	8f 93       	push	r24
 3c4:	8c e3       	ldi	r24, 0x3C	; 60
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	9f 93       	push	r25
 3ca:	8f 93       	push	r24
 3cc:	39 d2       	rcall	.+1138   	; 0x840 <sprintf>
			LCD_DisplayString(1,buffer);
 3ce:	6c e3       	ldi	r22, 0x3C	; 60
 3d0:	71 e0       	ldi	r23, 0x01	; 1
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	29 df       	rcall	.-430    	; 0x228 <LCD_DisplayString>
		//LCD_WriteData(x);
		if(xx > 560){
 3d6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 3da:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	81 33       	cpi	r24, 0x31	; 49
 3ec:	22 e0       	ldi	r18, 0x02	; 2
 3ee:	92 07       	cpc	r25, r18
 3f0:	20 f0       	brcs	.+8      	; 0x3fa <x_direction+0x60>
			//set_PWM(20);
			//speed(xx);
			x_state = right;
 3f2:	82 e0       	ldi	r24, 0x02	; 2
 3f4:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <x_state>
 3f8:	7b c0       	rjmp	.+246    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		}
		else if( xx < 535){
 3fa:	87 31       	cpi	r24, 0x17	; 23
 3fc:	92 40       	sbci	r25, 0x02	; 2
 3fe:	20 f4       	brcc	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
			//set_PWM(100);
			//speed(xx);
			x_state = left;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <x_state>
 406:	71 c0       	rjmp	.+226    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
		}
		else{
			x_state = wait;
 408:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <x_state>
		}
		break;
		case left:
		xx = ReadADC(0);
 40c:	69 c0       	rjmp	.+210    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 df       	rcall	.-224    	; 0x332 <ReadADC>
 412:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 416:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
		sprintf(buffer, "X=%d      Left", xx);
 41a:	9f 93       	push	r25
 41c:	8f 93       	push	r24
 41e:	85 e1       	ldi	r24, 0x15	; 21
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	9f 93       	push	r25
 424:	8f 93       	push	r24
 426:	8c e3       	ldi	r24, 0x3C	; 60
 428:	91 e0       	ldi	r25, 0x01	; 1
 42a:	9f 93       	push	r25
 42c:	8f 93       	push	r24
		LCD_DisplayString(1,buffer);
 42e:	08 d2       	rcall	.+1040   	; 0x840 <sprintf>
 430:	6c e3       	ldi	r22, 0x3C	; 60
 432:	71 e0       	ldi	r23, 0x01	; 1
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	f8 de       	rcall	.-528    	; 0x228 <LCD_DisplayString>
		if(xx > 560){
 438:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 43c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
 440:	0f 90       	pop	r0
 442:	0f 90       	pop	r0
 444:	0f 90       	pop	r0
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
 44c:	81 33       	cpi	r24, 0x31	; 49
 44e:	22 e0       	ldi	r18, 0x02	; 2
 450:	92 07       	cpc	r25, r18
 452:	20 f0       	brcs	.+8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
			//speed(xx);
			//set_PWM(20);
			x_state = right;
 454:	82 e0       	ldi	r24, 0x02	; 2
 456:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <x_state>
 45a:	4a c0       	rjmp	.+148    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		}
		else if( xx < 535){
 45c:	87 31       	cpi	r24, 0x17	; 23
 45e:	92 40       	sbci	r25, 0x02	; 2
 460:	20 f4       	brcc	.+8      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
			//speed(xx);
			//set_PWM(100);
			x_state = left;
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <x_state>
			//speed();
		}
		else{
			x_state = wait;
 468:	40 c0       	rjmp	.+128    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 46a:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <x_state>
		}
		break;
		case right:
		xx = ReadADC(0);
 46e:	38 c0       	rjmp	.+112    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	5f df       	rcall	.-322    	; 0x332 <ReadADC>
 474:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 478:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
		sprintf(buffer, "X=%d      Right", xx);
 47c:	9f 93       	push	r25
 47e:	8f 93       	push	r24
 480:	84 e2       	ldi	r24, 0x24	; 36
 482:	91 e0       	ldi	r25, 0x01	; 1
 484:	9f 93       	push	r25
 486:	8f 93       	push	r24
 488:	8c e3       	ldi	r24, 0x3C	; 60
 48a:	91 e0       	ldi	r25, 0x01	; 1
 48c:	9f 93       	push	r25
 48e:	8f 93       	push	r24
		LCD_DisplayString(1,buffer);
 490:	d7 d1       	rcall	.+942    	; 0x840 <sprintf>
 492:	6c e3       	ldi	r22, 0x3C	; 60
 494:	71 e0       	ldi	r23, 0x01	; 1
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	c7 de       	rcall	.-626    	; 0x228 <LCD_DisplayString>
		if(xx > 560){
 49a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 49e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
 4a2:	0f 90       	pop	r0
 4a4:	0f 90       	pop	r0
 4a6:	0f 90       	pop	r0
 4a8:	0f 90       	pop	r0
 4aa:	0f 90       	pop	r0
 4ac:	0f 90       	pop	r0
 4ae:	81 33       	cpi	r24, 0x31	; 49
 4b0:	22 e0       	ldi	r18, 0x02	; 2
 4b2:	92 07       	cpc	r25, r18
			//set_PWM(20);
			speed(xx);
 4b4:	48 f0       	brcs	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	50 df       	rcall	.-352    	; 0x358 <speed>
		break;
		default:
		x_state = wait;
		break;
	}
	switch(x_state){
 4b8:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <x_state>
 4bc:	81 30       	cpi	r24, 0x01	; 1
 4be:	a9 f0       	breq	.+42     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4c0:	78 f0       	brcs	.+30     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c2:	82 30       	cpi	r24, 0x02	; 2
 4c4:	c1 f4       	brne	.+48     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4c6:	14 c0       	rjmp	.+40     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		if(xx > 560){
			//set_PWM(20);
			speed(xx);
			//x_state = right;
		}
		else if( xx < 535){
 4c8:	87 31       	cpi	r24, 0x17	; 23
 4ca:	92 40       	sbci	r25, 0x02	; 2
 4cc:	20 f4       	brcc	.+8      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
			//set_PWM(100);
			//speed(xx);
			x_state = left;
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <x_state>
 4d4:	0a c0       	rjmp	.+20     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
		}
		else{
			x_state = wait;
 4d6:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <x_state>
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
		}
		break;
		default:
		x_state = wait;
 4dc:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <x_state>
		break;
	}
	switch(x_state){
		case wait:
		PORTC =SetBit(PORTC,0,0);
 4e0:	40 98       	cbi	0x08, 0	; 8
		PORTC =SetBit(PORTC,2,0);
 4e2:	42 98       	cbi	0x08, 2	; 8
		PORTC =SetBit(PORTC,1,0);
 4e4:	41 98       	cbi	0x08, 1	; 8
		PORTC =SetBit(PORTC,3,0);
 4e6:	43 98       	cbi	0x08, 3	; 8
		break;
 4e8:	08 95       	ret
		case left:
	//	speed(xx);
		PORTC =SetBit(PORTC,0,1);
 4ea:	40 9a       	sbi	0x08, 0	; 8
		PORTC =SetBit(PORTC,2,1);
 4ec:	42 9a       	sbi	0x08, 2	; 8
		break;
 4ee:	08 95       	ret
		case right:
	//	speed(xx);
		PORTC =SetBit(PORTC,3,1);
 4f0:	43 9a       	sbi	0x08, 3	; 8
		PORTC =SetBit(PORTC,1,1);
 4f2:	41 9a       	sbi	0x08, 1	; 8
		break;
 4f4:	08 95       	ret
		default:
		x_state = wait;
 4f6:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <x_state>
 4fa:	08 95       	ret

000004fc <main>:
}

char buffer1[10];
int main(void)
{
	DDRD = 0xFF; PORTD = 0x00;
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	8a b9       	out	0x0a, r24	; 10
 500:	1b b8       	out	0x0b, r1	; 11
	//DDRA = 0xFF; PORTA = 0x00;
	DDRA = 0xF0; PORTA = 0x0F;
 502:	90 ef       	ldi	r25, 0xF0	; 240
 504:	91 b9       	out	0x01, r25	; 1
 506:	9f e0       	ldi	r25, 0x0F	; 15
 508:	92 b9       	out	0x02, r25	; 2
	DDRB = 0xFF; PORTB = 0x00;
 50a:	84 b9       	out	0x04, r24	; 4
 50c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0x7F; PORTC = 0x80;
 50e:	8f e7       	ldi	r24, 0x7F	; 127
 510:	87 b9       	out	0x07, r24	; 7
 512:	80 e8       	ldi	r24, 0x80	; 128
 514:	88 b9       	out	0x08, r24	; 8
	ADC_init();
 516:	07 df       	rcall	.-498    	; 0x326 <ADC_init>
	LCD_init();
 518:	67 de       	rcall	.-818    	; 0x1e8 <LCD_init>
	LCD_ClearScreen();
 51a:	63 de       	rcall	.-826    	; 0x1e2 <LCD_ClearScreen>
 51c:	64 ef       	ldi	r22, 0xF4	; 244
	TimerSet(500);
 51e:	71 e0       	ldi	r23, 0x01	; 1
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	90 e0       	ldi	r25, 0x00	; 0
TimerOn();
 524:	d1 dd       	rcall	.-1118   	; 0xc8 <TimerSet>
 526:	e1 dd       	rcall	.-1086   	; 0xea <TimerOn>
	PWM_on();
 528:	f7 de       	rcall	.-530    	; 0x318 <PWM_on>
    /* Replace with your application code */
//
	//TIMSK=0b0000000
    while (1) 
    {
		if(GetBit(PINC,7) == 0){								//Works
 52a:	37 99       	sbic	0x06, 7	; 6
 52c:	02 c0       	rjmp	.+4      	; 0x532 <main+0x36>
			PORTB = SetBit(PORTB,0,1);
 52e:	28 9a       	sbi	0x05, 0	; 5
 530:	01 c0       	rjmp	.+2      	; 0x534 <main+0x38>
		}
		else{
			PORTB = SetBit(PORTB,0,0);
		}
		x_direction();
 532:	28 98       	cbi	0x05, 0	; 5
 534:	32 df       	rcall	.-412    	; 0x39a <x_direction>
		speed(xx);
 536:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 53a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x1>
 53e:	0c df       	rcall	.-488    	; 0x358 <speed>
 540:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <TimerFlag>

		while(!TimerFlag);
 544:	88 23       	and	r24, r24
 546:	e1 f3       	breq	.-8      	; 0x540 <main+0x44>
 548:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <TimerFlag>
		TimerFlag = 0;
 54c:	ee cf       	rjmp	.-36     	; 0x52a <main+0x2e>

0000054e <__cmpsf2>:
    }
 54e:	9c d0       	rcall	.+312    	; 0x688 <__fp_cmp>
 550:	08 f4       	brcc	.+2      	; 0x554 <__cmpsf2+0x6>
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	08 95       	ret

00000556 <__divsf3>:
 556:	0c d0       	rcall	.+24     	; 0x570 <__divsf3x>
 558:	d2 c0       	rjmp	.+420    	; 0x6fe <__fp_round>
 55a:	ca d0       	rcall	.+404    	; 0x6f0 <__fp_pscB>
 55c:	40 f0       	brcs	.+16     	; 0x56e <__divsf3+0x18>
 55e:	c1 d0       	rcall	.+386    	; 0x6e2 <__fp_pscA>
 560:	30 f0       	brcs	.+12     	; 0x56e <__divsf3+0x18>
 562:	21 f4       	brne	.+8      	; 0x56c <__divsf3+0x16>
 564:	5f 3f       	cpi	r21, 0xFF	; 255
 566:	19 f0       	breq	.+6      	; 0x56e <__divsf3+0x18>
 568:	b3 c0       	rjmp	.+358    	; 0x6d0 <__fp_inf>
 56a:	51 11       	cpse	r21, r1
 56c:	fc c0       	rjmp	.+504    	; 0x766 <__fp_szero>
 56e:	b6 c0       	rjmp	.+364    	; 0x6dc <__fp_nan>

00000570 <__divsf3x>:
 570:	d7 d0       	rcall	.+430    	; 0x720 <__fp_split3>
 572:	98 f3       	brcs	.-26     	; 0x55a <__divsf3+0x4>

00000574 <__divsf3_pse>:
 574:	99 23       	and	r25, r25
 576:	c9 f3       	breq	.-14     	; 0x56a <__divsf3+0x14>
 578:	55 23       	and	r21, r21
 57a:	b1 f3       	breq	.-20     	; 0x568 <__divsf3+0x12>
 57c:	95 1b       	sub	r25, r21
 57e:	55 0b       	sbc	r21, r21
 580:	bb 27       	eor	r27, r27
 582:	aa 27       	eor	r26, r26
 584:	62 17       	cp	r22, r18
 586:	73 07       	cpc	r23, r19
 588:	84 07       	cpc	r24, r20
 58a:	38 f0       	brcs	.+14     	; 0x59a <__divsf3_pse+0x26>
 58c:	9f 5f       	subi	r25, 0xFF	; 255
 58e:	5f 4f       	sbci	r21, 0xFF	; 255
 590:	22 0f       	add	r18, r18
 592:	33 1f       	adc	r19, r19
 594:	44 1f       	adc	r20, r20
 596:	aa 1f       	adc	r26, r26
 598:	a9 f3       	breq	.-22     	; 0x584 <__divsf3_pse+0x10>
 59a:	33 d0       	rcall	.+102    	; 0x602 <__divsf3_pse+0x8e>
 59c:	0e 2e       	mov	r0, r30
 59e:	3a f0       	brmi	.+14     	; 0x5ae <__divsf3_pse+0x3a>
 5a0:	e0 e8       	ldi	r30, 0x80	; 128
 5a2:	30 d0       	rcall	.+96     	; 0x604 <__divsf3_pse+0x90>
 5a4:	91 50       	subi	r25, 0x01	; 1
 5a6:	50 40       	sbci	r21, 0x00	; 0
 5a8:	e6 95       	lsr	r30
 5aa:	00 1c       	adc	r0, r0
 5ac:	ca f7       	brpl	.-14     	; 0x5a0 <__divsf3_pse+0x2c>
 5ae:	29 d0       	rcall	.+82     	; 0x602 <__divsf3_pse+0x8e>
 5b0:	fe 2f       	mov	r31, r30
 5b2:	27 d0       	rcall	.+78     	; 0x602 <__divsf3_pse+0x8e>
 5b4:	66 0f       	add	r22, r22
 5b6:	77 1f       	adc	r23, r23
 5b8:	88 1f       	adc	r24, r24
 5ba:	bb 1f       	adc	r27, r27
 5bc:	26 17       	cp	r18, r22
 5be:	37 07       	cpc	r19, r23
 5c0:	48 07       	cpc	r20, r24
 5c2:	ab 07       	cpc	r26, r27
 5c4:	b0 e8       	ldi	r27, 0x80	; 128
 5c6:	09 f0       	breq	.+2      	; 0x5ca <__divsf3_pse+0x56>
 5c8:	bb 0b       	sbc	r27, r27
 5ca:	80 2d       	mov	r24, r0
 5cc:	bf 01       	movw	r22, r30
 5ce:	ff 27       	eor	r31, r31
 5d0:	93 58       	subi	r25, 0x83	; 131
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	2a f0       	brmi	.+10     	; 0x5e0 <__divsf3_pse+0x6c>
 5d6:	9e 3f       	cpi	r25, 0xFE	; 254
 5d8:	51 05       	cpc	r21, r1
 5da:	68 f0       	brcs	.+26     	; 0x5f6 <__divsf3_pse+0x82>
 5dc:	79 c0       	rjmp	.+242    	; 0x6d0 <__fp_inf>
 5de:	c3 c0       	rjmp	.+390    	; 0x766 <__fp_szero>
 5e0:	5f 3f       	cpi	r21, 0xFF	; 255
 5e2:	ec f3       	brlt	.-6      	; 0x5de <__divsf3_pse+0x6a>
 5e4:	98 3e       	cpi	r25, 0xE8	; 232
 5e6:	dc f3       	brlt	.-10     	; 0x5de <__divsf3_pse+0x6a>
 5e8:	86 95       	lsr	r24
 5ea:	77 95       	ror	r23
 5ec:	67 95       	ror	r22
 5ee:	b7 95       	ror	r27
 5f0:	f7 95       	ror	r31
 5f2:	9f 5f       	subi	r25, 0xFF	; 255
 5f4:	c9 f7       	brne	.-14     	; 0x5e8 <__divsf3_pse+0x74>
 5f6:	88 0f       	add	r24, r24
 5f8:	91 1d       	adc	r25, r1
 5fa:	96 95       	lsr	r25
 5fc:	87 95       	ror	r24
 5fe:	97 f9       	bld	r25, 7
 600:	08 95       	ret
 602:	e1 e0       	ldi	r30, 0x01	; 1
 604:	66 0f       	add	r22, r22
 606:	77 1f       	adc	r23, r23
 608:	88 1f       	adc	r24, r24
 60a:	bb 1f       	adc	r27, r27
 60c:	62 17       	cp	r22, r18
 60e:	73 07       	cpc	r23, r19
 610:	84 07       	cpc	r24, r20
 612:	ba 07       	cpc	r27, r26
 614:	20 f0       	brcs	.+8      	; 0x61e <__divsf3_pse+0xaa>
 616:	62 1b       	sub	r22, r18
 618:	73 0b       	sbc	r23, r19
 61a:	84 0b       	sbc	r24, r20
 61c:	ba 0b       	sbc	r27, r26
 61e:	ee 1f       	adc	r30, r30
 620:	88 f7       	brcc	.-30     	; 0x604 <__divsf3_pse+0x90>
 622:	e0 95       	com	r30
 624:	08 95       	ret

00000626 <__fixsfsi>:
 626:	04 d0       	rcall	.+8      	; 0x630 <__fixunssfsi>
 628:	68 94       	set
 62a:	b1 11       	cpse	r27, r1
 62c:	9c c0       	rjmp	.+312    	; 0x766 <__fp_szero>
 62e:	08 95       	ret

00000630 <__fixunssfsi>:
 630:	7f d0       	rcall	.+254    	; 0x730 <__fp_splitA>
 632:	88 f0       	brcs	.+34     	; 0x656 <__fixunssfsi+0x26>
 634:	9f 57       	subi	r25, 0x7F	; 127
 636:	90 f0       	brcs	.+36     	; 0x65c <__fixunssfsi+0x2c>
 638:	b9 2f       	mov	r27, r25
 63a:	99 27       	eor	r25, r25
 63c:	b7 51       	subi	r27, 0x17	; 23
 63e:	a0 f0       	brcs	.+40     	; 0x668 <__fixunssfsi+0x38>
 640:	d1 f0       	breq	.+52     	; 0x676 <__fixunssfsi+0x46>
 642:	66 0f       	add	r22, r22
 644:	77 1f       	adc	r23, r23
 646:	88 1f       	adc	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	1a f0       	brmi	.+6      	; 0x652 <__fixunssfsi+0x22>
 64c:	ba 95       	dec	r27
 64e:	c9 f7       	brne	.-14     	; 0x642 <__fixunssfsi+0x12>
 650:	12 c0       	rjmp	.+36     	; 0x676 <__fixunssfsi+0x46>
 652:	b1 30       	cpi	r27, 0x01	; 1
 654:	81 f0       	breq	.+32     	; 0x676 <__fixunssfsi+0x46>
 656:	86 d0       	rcall	.+268    	; 0x764 <__fp_zero>
 658:	b1 e0       	ldi	r27, 0x01	; 1
 65a:	08 95       	ret
 65c:	83 c0       	rjmp	.+262    	; 0x764 <__fp_zero>
 65e:	67 2f       	mov	r22, r23
 660:	78 2f       	mov	r23, r24
 662:	88 27       	eor	r24, r24
 664:	b8 5f       	subi	r27, 0xF8	; 248
 666:	39 f0       	breq	.+14     	; 0x676 <__fixunssfsi+0x46>
 668:	b9 3f       	cpi	r27, 0xF9	; 249
 66a:	cc f3       	brlt	.-14     	; 0x65e <__fixunssfsi+0x2e>
 66c:	86 95       	lsr	r24
 66e:	77 95       	ror	r23
 670:	67 95       	ror	r22
 672:	b3 95       	inc	r27
 674:	d9 f7       	brne	.-10     	; 0x66c <__fixunssfsi+0x3c>
 676:	3e f4       	brtc	.+14     	; 0x686 <__fixunssfsi+0x56>
 678:	90 95       	com	r25
 67a:	80 95       	com	r24
 67c:	70 95       	com	r23
 67e:	61 95       	neg	r22
 680:	7f 4f       	sbci	r23, 0xFF	; 255
 682:	8f 4f       	sbci	r24, 0xFF	; 255
 684:	9f 4f       	sbci	r25, 0xFF	; 255
 686:	08 95       	ret

00000688 <__fp_cmp>:
 688:	99 0f       	add	r25, r25
 68a:	00 08       	sbc	r0, r0
 68c:	55 0f       	add	r21, r21
 68e:	aa 0b       	sbc	r26, r26
 690:	e0 e8       	ldi	r30, 0x80	; 128
 692:	fe ef       	ldi	r31, 0xFE	; 254
 694:	16 16       	cp	r1, r22
 696:	17 06       	cpc	r1, r23
 698:	e8 07       	cpc	r30, r24
 69a:	f9 07       	cpc	r31, r25
 69c:	c0 f0       	brcs	.+48     	; 0x6ce <__fp_cmp+0x46>
 69e:	12 16       	cp	r1, r18
 6a0:	13 06       	cpc	r1, r19
 6a2:	e4 07       	cpc	r30, r20
 6a4:	f5 07       	cpc	r31, r21
 6a6:	98 f0       	brcs	.+38     	; 0x6ce <__fp_cmp+0x46>
 6a8:	62 1b       	sub	r22, r18
 6aa:	73 0b       	sbc	r23, r19
 6ac:	84 0b       	sbc	r24, r20
 6ae:	95 0b       	sbc	r25, r21
 6b0:	39 f4       	brne	.+14     	; 0x6c0 <__fp_cmp+0x38>
 6b2:	0a 26       	eor	r0, r26
 6b4:	61 f0       	breq	.+24     	; 0x6ce <__fp_cmp+0x46>
 6b6:	23 2b       	or	r18, r19
 6b8:	24 2b       	or	r18, r20
 6ba:	25 2b       	or	r18, r21
 6bc:	21 f4       	brne	.+8      	; 0x6c6 <__fp_cmp+0x3e>
 6be:	08 95       	ret
 6c0:	0a 26       	eor	r0, r26
 6c2:	09 f4       	brne	.+2      	; 0x6c6 <__fp_cmp+0x3e>
 6c4:	a1 40       	sbci	r26, 0x01	; 1
 6c6:	a6 95       	lsr	r26
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	81 1d       	adc	r24, r1
 6cc:	81 1d       	adc	r24, r1
 6ce:	08 95       	ret

000006d0 <__fp_inf>:
 6d0:	97 f9       	bld	r25, 7
 6d2:	9f 67       	ori	r25, 0x7F	; 127
 6d4:	80 e8       	ldi	r24, 0x80	; 128
 6d6:	70 e0       	ldi	r23, 0x00	; 0
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	08 95       	ret

000006dc <__fp_nan>:
 6dc:	9f ef       	ldi	r25, 0xFF	; 255
 6de:	80 ec       	ldi	r24, 0xC0	; 192
 6e0:	08 95       	ret

000006e2 <__fp_pscA>:
 6e2:	00 24       	eor	r0, r0
 6e4:	0a 94       	dec	r0
 6e6:	16 16       	cp	r1, r22
 6e8:	17 06       	cpc	r1, r23
 6ea:	18 06       	cpc	r1, r24
 6ec:	09 06       	cpc	r0, r25
 6ee:	08 95       	ret

000006f0 <__fp_pscB>:
 6f0:	00 24       	eor	r0, r0
 6f2:	0a 94       	dec	r0
 6f4:	12 16       	cp	r1, r18
 6f6:	13 06       	cpc	r1, r19
 6f8:	14 06       	cpc	r1, r20
 6fa:	05 06       	cpc	r0, r21
 6fc:	08 95       	ret

000006fe <__fp_round>:
 6fe:	09 2e       	mov	r0, r25
 700:	03 94       	inc	r0
 702:	00 0c       	add	r0, r0
 704:	11 f4       	brne	.+4      	; 0x70a <__fp_round+0xc>
 706:	88 23       	and	r24, r24
 708:	52 f0       	brmi	.+20     	; 0x71e <__fp_round+0x20>
 70a:	bb 0f       	add	r27, r27
 70c:	40 f4       	brcc	.+16     	; 0x71e <__fp_round+0x20>
 70e:	bf 2b       	or	r27, r31
 710:	11 f4       	brne	.+4      	; 0x716 <__fp_round+0x18>
 712:	60 ff       	sbrs	r22, 0
 714:	04 c0       	rjmp	.+8      	; 0x71e <__fp_round+0x20>
 716:	6f 5f       	subi	r22, 0xFF	; 255
 718:	7f 4f       	sbci	r23, 0xFF	; 255
 71a:	8f 4f       	sbci	r24, 0xFF	; 255
 71c:	9f 4f       	sbci	r25, 0xFF	; 255
 71e:	08 95       	ret

00000720 <__fp_split3>:
 720:	57 fd       	sbrc	r21, 7
 722:	90 58       	subi	r25, 0x80	; 128
 724:	44 0f       	add	r20, r20
 726:	55 1f       	adc	r21, r21
 728:	59 f0       	breq	.+22     	; 0x740 <__fp_splitA+0x10>
 72a:	5f 3f       	cpi	r21, 0xFF	; 255
 72c:	71 f0       	breq	.+28     	; 0x74a <__fp_splitA+0x1a>
 72e:	47 95       	ror	r20

00000730 <__fp_splitA>:
 730:	88 0f       	add	r24, r24
 732:	97 fb       	bst	r25, 7
 734:	99 1f       	adc	r25, r25
 736:	61 f0       	breq	.+24     	; 0x750 <__fp_splitA+0x20>
 738:	9f 3f       	cpi	r25, 0xFF	; 255
 73a:	79 f0       	breq	.+30     	; 0x75a <__fp_splitA+0x2a>
 73c:	87 95       	ror	r24
 73e:	08 95       	ret
 740:	12 16       	cp	r1, r18
 742:	13 06       	cpc	r1, r19
 744:	14 06       	cpc	r1, r20
 746:	55 1f       	adc	r21, r21
 748:	f2 cf       	rjmp	.-28     	; 0x72e <__fp_split3+0xe>
 74a:	46 95       	lsr	r20
 74c:	f1 df       	rcall	.-30     	; 0x730 <__fp_splitA>
 74e:	08 c0       	rjmp	.+16     	; 0x760 <__fp_splitA+0x30>
 750:	16 16       	cp	r1, r22
 752:	17 06       	cpc	r1, r23
 754:	18 06       	cpc	r1, r24
 756:	99 1f       	adc	r25, r25
 758:	f1 cf       	rjmp	.-30     	; 0x73c <__fp_splitA+0xc>
 75a:	86 95       	lsr	r24
 75c:	71 05       	cpc	r23, r1
 75e:	61 05       	cpc	r22, r1
 760:	08 94       	sec
 762:	08 95       	ret

00000764 <__fp_zero>:
 764:	e8 94       	clt

00000766 <__fp_szero>:
 766:	bb 27       	eor	r27, r27
 768:	66 27       	eor	r22, r22
 76a:	77 27       	eor	r23, r23
 76c:	cb 01       	movw	r24, r22
 76e:	97 f9       	bld	r25, 7
 770:	08 95       	ret

00000772 <__gesf2>:
 772:	8a df       	rcall	.-236    	; 0x688 <__fp_cmp>
 774:	08 f4       	brcc	.+2      	; 0x778 <__gesf2+0x6>
 776:	8f ef       	ldi	r24, 0xFF	; 255
 778:	08 95       	ret

0000077a <__mulsf3>:
 77a:	0b d0       	rcall	.+22     	; 0x792 <__mulsf3x>
 77c:	c0 cf       	rjmp	.-128    	; 0x6fe <__fp_round>
 77e:	b1 df       	rcall	.-158    	; 0x6e2 <__fp_pscA>
 780:	28 f0       	brcs	.+10     	; 0x78c <__mulsf3+0x12>
 782:	b6 df       	rcall	.-148    	; 0x6f0 <__fp_pscB>
 784:	18 f0       	brcs	.+6      	; 0x78c <__mulsf3+0x12>
 786:	95 23       	and	r25, r21
 788:	09 f0       	breq	.+2      	; 0x78c <__mulsf3+0x12>
 78a:	a2 cf       	rjmp	.-188    	; 0x6d0 <__fp_inf>
 78c:	a7 cf       	rjmp	.-178    	; 0x6dc <__fp_nan>
 78e:	11 24       	eor	r1, r1
 790:	ea cf       	rjmp	.-44     	; 0x766 <__fp_szero>

00000792 <__mulsf3x>:
 792:	c6 df       	rcall	.-116    	; 0x720 <__fp_split3>
 794:	a0 f3       	brcs	.-24     	; 0x77e <__mulsf3+0x4>

00000796 <__mulsf3_pse>:
 796:	95 9f       	mul	r25, r21
 798:	d1 f3       	breq	.-12     	; 0x78e <__mulsf3+0x14>
 79a:	95 0f       	add	r25, r21
 79c:	50 e0       	ldi	r21, 0x00	; 0
 79e:	55 1f       	adc	r21, r21
 7a0:	62 9f       	mul	r22, r18
 7a2:	f0 01       	movw	r30, r0
 7a4:	72 9f       	mul	r23, r18
 7a6:	bb 27       	eor	r27, r27
 7a8:	f0 0d       	add	r31, r0
 7aa:	b1 1d       	adc	r27, r1
 7ac:	63 9f       	mul	r22, r19
 7ae:	aa 27       	eor	r26, r26
 7b0:	f0 0d       	add	r31, r0
 7b2:	b1 1d       	adc	r27, r1
 7b4:	aa 1f       	adc	r26, r26
 7b6:	64 9f       	mul	r22, r20
 7b8:	66 27       	eor	r22, r22
 7ba:	b0 0d       	add	r27, r0
 7bc:	a1 1d       	adc	r26, r1
 7be:	66 1f       	adc	r22, r22
 7c0:	82 9f       	mul	r24, r18
 7c2:	22 27       	eor	r18, r18
 7c4:	b0 0d       	add	r27, r0
 7c6:	a1 1d       	adc	r26, r1
 7c8:	62 1f       	adc	r22, r18
 7ca:	73 9f       	mul	r23, r19
 7cc:	b0 0d       	add	r27, r0
 7ce:	a1 1d       	adc	r26, r1
 7d0:	62 1f       	adc	r22, r18
 7d2:	83 9f       	mul	r24, r19
 7d4:	a0 0d       	add	r26, r0
 7d6:	61 1d       	adc	r22, r1
 7d8:	22 1f       	adc	r18, r18
 7da:	74 9f       	mul	r23, r20
 7dc:	33 27       	eor	r19, r19
 7de:	a0 0d       	add	r26, r0
 7e0:	61 1d       	adc	r22, r1
 7e2:	23 1f       	adc	r18, r19
 7e4:	84 9f       	mul	r24, r20
 7e6:	60 0d       	add	r22, r0
 7e8:	21 1d       	adc	r18, r1
 7ea:	82 2f       	mov	r24, r18
 7ec:	76 2f       	mov	r23, r22
 7ee:	6a 2f       	mov	r22, r26
 7f0:	11 24       	eor	r1, r1
 7f2:	9f 57       	subi	r25, 0x7F	; 127
 7f4:	50 40       	sbci	r21, 0x00	; 0
 7f6:	8a f0       	brmi	.+34     	; 0x81a <__mulsf3_pse+0x84>
 7f8:	e1 f0       	breq	.+56     	; 0x832 <__mulsf3_pse+0x9c>
 7fa:	88 23       	and	r24, r24
 7fc:	4a f0       	brmi	.+18     	; 0x810 <__mulsf3_pse+0x7a>
 7fe:	ee 0f       	add	r30, r30
 800:	ff 1f       	adc	r31, r31
 802:	bb 1f       	adc	r27, r27
 804:	66 1f       	adc	r22, r22
 806:	77 1f       	adc	r23, r23
 808:	88 1f       	adc	r24, r24
 80a:	91 50       	subi	r25, 0x01	; 1
 80c:	50 40       	sbci	r21, 0x00	; 0
 80e:	a9 f7       	brne	.-22     	; 0x7fa <__mulsf3_pse+0x64>
 810:	9e 3f       	cpi	r25, 0xFE	; 254
 812:	51 05       	cpc	r21, r1
 814:	70 f0       	brcs	.+28     	; 0x832 <__mulsf3_pse+0x9c>
 816:	5c cf       	rjmp	.-328    	; 0x6d0 <__fp_inf>
 818:	a6 cf       	rjmp	.-180    	; 0x766 <__fp_szero>
 81a:	5f 3f       	cpi	r21, 0xFF	; 255
 81c:	ec f3       	brlt	.-6      	; 0x818 <__mulsf3_pse+0x82>
 81e:	98 3e       	cpi	r25, 0xE8	; 232
 820:	dc f3       	brlt	.-10     	; 0x818 <__mulsf3_pse+0x82>
 822:	86 95       	lsr	r24
 824:	77 95       	ror	r23
 826:	67 95       	ror	r22
 828:	b7 95       	ror	r27
 82a:	f7 95       	ror	r31
 82c:	e7 95       	ror	r30
 82e:	9f 5f       	subi	r25, 0xFF	; 255
 830:	c1 f7       	brne	.-16     	; 0x822 <__mulsf3_pse+0x8c>
 832:	fe 2b       	or	r31, r30
 834:	88 0f       	add	r24, r24
 836:	91 1d       	adc	r25, r1
 838:	96 95       	lsr	r25
 83a:	87 95       	ror	r24
 83c:	97 f9       	bld	r25, 7
 83e:	08 95       	ret

00000840 <sprintf>:
 840:	0f 93       	push	r16
 842:	1f 93       	push	r17
 844:	cf 93       	push	r28
 846:	df 93       	push	r29
 848:	cd b7       	in	r28, 0x3d	; 61
 84a:	de b7       	in	r29, 0x3e	; 62
 84c:	2e 97       	sbiw	r28, 0x0e	; 14
 84e:	0f b6       	in	r0, 0x3f	; 63
 850:	f8 94       	cli
 852:	de bf       	out	0x3e, r29	; 62
 854:	0f be       	out	0x3f, r0	; 63
 856:	cd bf       	out	0x3d, r28	; 61
 858:	0d 89       	ldd	r16, Y+21	; 0x15
 85a:	1e 89       	ldd	r17, Y+22	; 0x16
 85c:	86 e0       	ldi	r24, 0x06	; 6
 85e:	8c 83       	std	Y+4, r24	; 0x04
 860:	1a 83       	std	Y+2, r17	; 0x02
 862:	09 83       	std	Y+1, r16	; 0x01
 864:	8f ef       	ldi	r24, 0xFF	; 255
 866:	9f e7       	ldi	r25, 0x7F	; 127
 868:	9e 83       	std	Y+6, r25	; 0x06
 86a:	8d 83       	std	Y+5, r24	; 0x05
 86c:	ae 01       	movw	r20, r28
 86e:	47 5e       	subi	r20, 0xE7	; 231
 870:	5f 4f       	sbci	r21, 0xFF	; 255
 872:	6f 89       	ldd	r22, Y+23	; 0x17
 874:	78 8d       	ldd	r23, Y+24	; 0x18
 876:	ce 01       	movw	r24, r28
 878:	01 96       	adiw	r24, 0x01	; 1
 87a:	10 d0       	rcall	.+32     	; 0x89c <vfprintf>
 87c:	ef 81       	ldd	r30, Y+7	; 0x07
 87e:	f8 85       	ldd	r31, Y+8	; 0x08
 880:	e0 0f       	add	r30, r16
 882:	f1 1f       	adc	r31, r17
 884:	10 82       	st	Z, r1
 886:	2e 96       	adiw	r28, 0x0e	; 14
 888:	0f b6       	in	r0, 0x3f	; 63
 88a:	f8 94       	cli
 88c:	de bf       	out	0x3e, r29	; 62
 88e:	0f be       	out	0x3f, r0	; 63
 890:	cd bf       	out	0x3d, r28	; 61
 892:	df 91       	pop	r29
 894:	cf 91       	pop	r28
 896:	1f 91       	pop	r17
 898:	0f 91       	pop	r16
 89a:	08 95       	ret

0000089c <vfprintf>:
 89c:	2f 92       	push	r2
 89e:	3f 92       	push	r3
 8a0:	4f 92       	push	r4
 8a2:	5f 92       	push	r5
 8a4:	6f 92       	push	r6
 8a6:	7f 92       	push	r7
 8a8:	8f 92       	push	r8
 8aa:	9f 92       	push	r9
 8ac:	af 92       	push	r10
 8ae:	bf 92       	push	r11
 8b0:	cf 92       	push	r12
 8b2:	df 92       	push	r13
 8b4:	ef 92       	push	r14
 8b6:	ff 92       	push	r15
 8b8:	0f 93       	push	r16
 8ba:	1f 93       	push	r17
 8bc:	cf 93       	push	r28
 8be:	df 93       	push	r29
 8c0:	cd b7       	in	r28, 0x3d	; 61
 8c2:	de b7       	in	r29, 0x3e	; 62
 8c4:	2b 97       	sbiw	r28, 0x0b	; 11
 8c6:	0f b6       	in	r0, 0x3f	; 63
 8c8:	f8 94       	cli
 8ca:	de bf       	out	0x3e, r29	; 62
 8cc:	0f be       	out	0x3f, r0	; 63
 8ce:	cd bf       	out	0x3d, r28	; 61
 8d0:	6c 01       	movw	r12, r24
 8d2:	7b 01       	movw	r14, r22
 8d4:	8a 01       	movw	r16, r20
 8d6:	fc 01       	movw	r30, r24
 8d8:	17 82       	std	Z+7, r1	; 0x07
 8da:	16 82       	std	Z+6, r1	; 0x06
 8dc:	83 81       	ldd	r24, Z+3	; 0x03
 8de:	81 ff       	sbrs	r24, 1
 8e0:	bf c1       	rjmp	.+894    	; 0xc60 <vfprintf+0x3c4>
 8e2:	ce 01       	movw	r24, r28
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	3c 01       	movw	r6, r24
 8e8:	f6 01       	movw	r30, r12
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	f7 01       	movw	r30, r14
 8ee:	93 fd       	sbrc	r25, 3
 8f0:	85 91       	lpm	r24, Z+
 8f2:	93 ff       	sbrs	r25, 3
 8f4:	81 91       	ld	r24, Z+
 8f6:	7f 01       	movw	r14, r30
 8f8:	88 23       	and	r24, r24
 8fa:	09 f4       	brne	.+2      	; 0x8fe <vfprintf+0x62>
 8fc:	ad c1       	rjmp	.+858    	; 0xc58 <vfprintf+0x3bc>
 8fe:	85 32       	cpi	r24, 0x25	; 37
 900:	39 f4       	brne	.+14     	; 0x910 <vfprintf+0x74>
 902:	93 fd       	sbrc	r25, 3
 904:	85 91       	lpm	r24, Z+
 906:	93 ff       	sbrs	r25, 3
 908:	81 91       	ld	r24, Z+
 90a:	7f 01       	movw	r14, r30
 90c:	85 32       	cpi	r24, 0x25	; 37
 90e:	21 f4       	brne	.+8      	; 0x918 <vfprintf+0x7c>
 910:	b6 01       	movw	r22, r12
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	d6 d1       	rcall	.+940    	; 0xcc2 <fputc>
 916:	e8 cf       	rjmp	.-48     	; 0x8e8 <vfprintf+0x4c>
 918:	91 2c       	mov	r9, r1
 91a:	21 2c       	mov	r2, r1
 91c:	31 2c       	mov	r3, r1
 91e:	ff e1       	ldi	r31, 0x1F	; 31
 920:	f3 15       	cp	r31, r3
 922:	d8 f0       	brcs	.+54     	; 0x95a <vfprintf+0xbe>
 924:	8b 32       	cpi	r24, 0x2B	; 43
 926:	79 f0       	breq	.+30     	; 0x946 <vfprintf+0xaa>
 928:	38 f4       	brcc	.+14     	; 0x938 <vfprintf+0x9c>
 92a:	80 32       	cpi	r24, 0x20	; 32
 92c:	79 f0       	breq	.+30     	; 0x94c <vfprintf+0xb0>
 92e:	83 32       	cpi	r24, 0x23	; 35
 930:	a1 f4       	brne	.+40     	; 0x95a <vfprintf+0xbe>
 932:	23 2d       	mov	r18, r3
 934:	20 61       	ori	r18, 0x10	; 16
 936:	1d c0       	rjmp	.+58     	; 0x972 <vfprintf+0xd6>
 938:	8d 32       	cpi	r24, 0x2D	; 45
 93a:	61 f0       	breq	.+24     	; 0x954 <vfprintf+0xb8>
 93c:	80 33       	cpi	r24, 0x30	; 48
 93e:	69 f4       	brne	.+26     	; 0x95a <vfprintf+0xbe>
 940:	23 2d       	mov	r18, r3
 942:	21 60       	ori	r18, 0x01	; 1
 944:	16 c0       	rjmp	.+44     	; 0x972 <vfprintf+0xd6>
 946:	83 2d       	mov	r24, r3
 948:	82 60       	ori	r24, 0x02	; 2
 94a:	38 2e       	mov	r3, r24
 94c:	e3 2d       	mov	r30, r3
 94e:	e4 60       	ori	r30, 0x04	; 4
 950:	3e 2e       	mov	r3, r30
 952:	2a c0       	rjmp	.+84     	; 0x9a8 <vfprintf+0x10c>
 954:	f3 2d       	mov	r31, r3
 956:	f8 60       	ori	r31, 0x08	; 8
 958:	1d c0       	rjmp	.+58     	; 0x994 <vfprintf+0xf8>
 95a:	37 fc       	sbrc	r3, 7
 95c:	2d c0       	rjmp	.+90     	; 0x9b8 <vfprintf+0x11c>
 95e:	20 ed       	ldi	r18, 0xD0	; 208
 960:	28 0f       	add	r18, r24
 962:	2a 30       	cpi	r18, 0x0A	; 10
 964:	40 f0       	brcs	.+16     	; 0x976 <vfprintf+0xda>
 966:	8e 32       	cpi	r24, 0x2E	; 46
 968:	b9 f4       	brne	.+46     	; 0x998 <vfprintf+0xfc>
 96a:	36 fc       	sbrc	r3, 6
 96c:	75 c1       	rjmp	.+746    	; 0xc58 <vfprintf+0x3bc>
 96e:	23 2d       	mov	r18, r3
 970:	20 64       	ori	r18, 0x40	; 64
 972:	32 2e       	mov	r3, r18
 974:	19 c0       	rjmp	.+50     	; 0x9a8 <vfprintf+0x10c>
 976:	36 fe       	sbrs	r3, 6
 978:	06 c0       	rjmp	.+12     	; 0x986 <vfprintf+0xea>
 97a:	8a e0       	ldi	r24, 0x0A	; 10
 97c:	98 9e       	mul	r9, r24
 97e:	20 0d       	add	r18, r0
 980:	11 24       	eor	r1, r1
 982:	92 2e       	mov	r9, r18
 984:	11 c0       	rjmp	.+34     	; 0x9a8 <vfprintf+0x10c>
 986:	ea e0       	ldi	r30, 0x0A	; 10
 988:	2e 9e       	mul	r2, r30
 98a:	20 0d       	add	r18, r0
 98c:	11 24       	eor	r1, r1
 98e:	22 2e       	mov	r2, r18
 990:	f3 2d       	mov	r31, r3
 992:	f0 62       	ori	r31, 0x20	; 32
 994:	3f 2e       	mov	r3, r31
 996:	08 c0       	rjmp	.+16     	; 0x9a8 <vfprintf+0x10c>
 998:	8c 36       	cpi	r24, 0x6C	; 108
 99a:	21 f4       	brne	.+8      	; 0x9a4 <vfprintf+0x108>
 99c:	83 2d       	mov	r24, r3
 99e:	80 68       	ori	r24, 0x80	; 128
 9a0:	38 2e       	mov	r3, r24
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <vfprintf+0x10c>
 9a4:	88 36       	cpi	r24, 0x68	; 104
 9a6:	41 f4       	brne	.+16     	; 0x9b8 <vfprintf+0x11c>
 9a8:	f7 01       	movw	r30, r14
 9aa:	93 fd       	sbrc	r25, 3
 9ac:	85 91       	lpm	r24, Z+
 9ae:	93 ff       	sbrs	r25, 3
 9b0:	81 91       	ld	r24, Z+
 9b2:	7f 01       	movw	r14, r30
 9b4:	81 11       	cpse	r24, r1
 9b6:	b3 cf       	rjmp	.-154    	; 0x91e <vfprintf+0x82>
 9b8:	98 2f       	mov	r25, r24
 9ba:	9f 7d       	andi	r25, 0xDF	; 223
 9bc:	95 54       	subi	r25, 0x45	; 69
 9be:	93 30       	cpi	r25, 0x03	; 3
 9c0:	28 f4       	brcc	.+10     	; 0x9cc <vfprintf+0x130>
 9c2:	0c 5f       	subi	r16, 0xFC	; 252
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	9f e3       	ldi	r25, 0x3F	; 63
 9c8:	99 83       	std	Y+1, r25	; 0x01
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <vfprintf+0x14a>
 9cc:	83 36       	cpi	r24, 0x63	; 99
 9ce:	31 f0       	breq	.+12     	; 0x9dc <vfprintf+0x140>
 9d0:	83 37       	cpi	r24, 0x73	; 115
 9d2:	71 f0       	breq	.+28     	; 0x9f0 <vfprintf+0x154>
 9d4:	83 35       	cpi	r24, 0x53	; 83
 9d6:	09 f0       	breq	.+2      	; 0x9da <vfprintf+0x13e>
 9d8:	55 c0       	rjmp	.+170    	; 0xa84 <vfprintf+0x1e8>
 9da:	20 c0       	rjmp	.+64     	; 0xa1c <vfprintf+0x180>
 9dc:	f8 01       	movw	r30, r16
 9de:	80 81       	ld	r24, Z
 9e0:	89 83       	std	Y+1, r24	; 0x01
 9e2:	0e 5f       	subi	r16, 0xFE	; 254
 9e4:	1f 4f       	sbci	r17, 0xFF	; 255
 9e6:	88 24       	eor	r8, r8
 9e8:	83 94       	inc	r8
 9ea:	91 2c       	mov	r9, r1
 9ec:	53 01       	movw	r10, r6
 9ee:	12 c0       	rjmp	.+36     	; 0xa14 <vfprintf+0x178>
 9f0:	28 01       	movw	r4, r16
 9f2:	f2 e0       	ldi	r31, 0x02	; 2
 9f4:	4f 0e       	add	r4, r31
 9f6:	51 1c       	adc	r5, r1
 9f8:	f8 01       	movw	r30, r16
 9fa:	a0 80       	ld	r10, Z
 9fc:	b1 80       	ldd	r11, Z+1	; 0x01
 9fe:	36 fe       	sbrs	r3, 6
 a00:	03 c0       	rjmp	.+6      	; 0xa08 <vfprintf+0x16c>
 a02:	69 2d       	mov	r22, r9
 a04:	70 e0       	ldi	r23, 0x00	; 0
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0x170>
 a08:	6f ef       	ldi	r22, 0xFF	; 255
 a0a:	7f ef       	ldi	r23, 0xFF	; 255
 a0c:	c5 01       	movw	r24, r10
 a0e:	4e d1       	rcall	.+668    	; 0xcac <strnlen>
 a10:	4c 01       	movw	r8, r24
 a12:	82 01       	movw	r16, r4
 a14:	f3 2d       	mov	r31, r3
 a16:	ff 77       	andi	r31, 0x7F	; 127
 a18:	3f 2e       	mov	r3, r31
 a1a:	15 c0       	rjmp	.+42     	; 0xa46 <vfprintf+0x1aa>
 a1c:	28 01       	movw	r4, r16
 a1e:	22 e0       	ldi	r18, 0x02	; 2
 a20:	42 0e       	add	r4, r18
 a22:	51 1c       	adc	r5, r1
 a24:	f8 01       	movw	r30, r16
 a26:	a0 80       	ld	r10, Z
 a28:	b1 80       	ldd	r11, Z+1	; 0x01
 a2a:	36 fe       	sbrs	r3, 6
 a2c:	03 c0       	rjmp	.+6      	; 0xa34 <vfprintf+0x198>
 a2e:	69 2d       	mov	r22, r9
 a30:	70 e0       	ldi	r23, 0x00	; 0
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <vfprintf+0x19c>
 a34:	6f ef       	ldi	r22, 0xFF	; 255
 a36:	7f ef       	ldi	r23, 0xFF	; 255
 a38:	c5 01       	movw	r24, r10
 a3a:	2d d1       	rcall	.+602    	; 0xc96 <strnlen_P>
 a3c:	4c 01       	movw	r8, r24
 a3e:	f3 2d       	mov	r31, r3
 a40:	f0 68       	ori	r31, 0x80	; 128
 a42:	3f 2e       	mov	r3, r31
 a44:	82 01       	movw	r16, r4
 a46:	33 fc       	sbrc	r3, 3
 a48:	19 c0       	rjmp	.+50     	; 0xa7c <vfprintf+0x1e0>
 a4a:	82 2d       	mov	r24, r2
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	88 16       	cp	r8, r24
 a50:	99 06       	cpc	r9, r25
 a52:	a0 f4       	brcc	.+40     	; 0xa7c <vfprintf+0x1e0>
 a54:	b6 01       	movw	r22, r12
 a56:	80 e2       	ldi	r24, 0x20	; 32
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	33 d1       	rcall	.+614    	; 0xcc2 <fputc>
 a5c:	2a 94       	dec	r2
 a5e:	f5 cf       	rjmp	.-22     	; 0xa4a <vfprintf+0x1ae>
 a60:	f5 01       	movw	r30, r10
 a62:	37 fc       	sbrc	r3, 7
 a64:	85 91       	lpm	r24, Z+
 a66:	37 fe       	sbrs	r3, 7
 a68:	81 91       	ld	r24, Z+
 a6a:	5f 01       	movw	r10, r30
 a6c:	b6 01       	movw	r22, r12
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	28 d1       	rcall	.+592    	; 0xcc2 <fputc>
 a72:	21 10       	cpse	r2, r1
 a74:	2a 94       	dec	r2
 a76:	21 e0       	ldi	r18, 0x01	; 1
 a78:	82 1a       	sub	r8, r18
 a7a:	91 08       	sbc	r9, r1
 a7c:	81 14       	cp	r8, r1
 a7e:	91 04       	cpc	r9, r1
 a80:	79 f7       	brne	.-34     	; 0xa60 <vfprintf+0x1c4>
 a82:	e1 c0       	rjmp	.+450    	; 0xc46 <vfprintf+0x3aa>
 a84:	84 36       	cpi	r24, 0x64	; 100
 a86:	11 f0       	breq	.+4      	; 0xa8c <vfprintf+0x1f0>
 a88:	89 36       	cpi	r24, 0x69	; 105
 a8a:	39 f5       	brne	.+78     	; 0xada <vfprintf+0x23e>
 a8c:	f8 01       	movw	r30, r16
 a8e:	37 fe       	sbrs	r3, 7
 a90:	07 c0       	rjmp	.+14     	; 0xaa0 <vfprintf+0x204>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	82 81       	ldd	r24, Z+2	; 0x02
 a98:	93 81       	ldd	r25, Z+3	; 0x03
 a9a:	0c 5f       	subi	r16, 0xFC	; 252
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	08 c0       	rjmp	.+16     	; 0xab0 <vfprintf+0x214>
 aa0:	60 81       	ld	r22, Z
 aa2:	71 81       	ldd	r23, Z+1	; 0x01
 aa4:	07 2e       	mov	r0, r23
 aa6:	00 0c       	add	r0, r0
 aa8:	88 0b       	sbc	r24, r24
 aaa:	99 0b       	sbc	r25, r25
 aac:	0e 5f       	subi	r16, 0xFE	; 254
 aae:	1f 4f       	sbci	r17, 0xFF	; 255
 ab0:	f3 2d       	mov	r31, r3
 ab2:	ff 76       	andi	r31, 0x6F	; 111
 ab4:	3f 2e       	mov	r3, r31
 ab6:	97 ff       	sbrs	r25, 7
 ab8:	09 c0       	rjmp	.+18     	; 0xacc <vfprintf+0x230>
 aba:	90 95       	com	r25
 abc:	80 95       	com	r24
 abe:	70 95       	com	r23
 ac0:	61 95       	neg	r22
 ac2:	7f 4f       	sbci	r23, 0xFF	; 255
 ac4:	8f 4f       	sbci	r24, 0xFF	; 255
 ac6:	9f 4f       	sbci	r25, 0xFF	; 255
 ac8:	f0 68       	ori	r31, 0x80	; 128
 aca:	3f 2e       	mov	r3, r31
 acc:	2a e0       	ldi	r18, 0x0A	; 10
 ace:	30 e0       	ldi	r19, 0x00	; 0
 ad0:	a3 01       	movw	r20, r6
 ad2:	33 d1       	rcall	.+614    	; 0xd3a <__ultoa_invert>
 ad4:	88 2e       	mov	r8, r24
 ad6:	86 18       	sub	r8, r6
 ad8:	44 c0       	rjmp	.+136    	; 0xb62 <vfprintf+0x2c6>
 ada:	85 37       	cpi	r24, 0x75	; 117
 adc:	31 f4       	brne	.+12     	; 0xaea <vfprintf+0x24e>
 ade:	23 2d       	mov	r18, r3
 ae0:	2f 7e       	andi	r18, 0xEF	; 239
 ae2:	b2 2e       	mov	r11, r18
 ae4:	2a e0       	ldi	r18, 0x0A	; 10
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	25 c0       	rjmp	.+74     	; 0xb34 <vfprintf+0x298>
 aea:	93 2d       	mov	r25, r3
 aec:	99 7f       	andi	r25, 0xF9	; 249
 aee:	b9 2e       	mov	r11, r25
 af0:	8f 36       	cpi	r24, 0x6F	; 111
 af2:	c1 f0       	breq	.+48     	; 0xb24 <vfprintf+0x288>
 af4:	18 f4       	brcc	.+6      	; 0xafc <vfprintf+0x260>
 af6:	88 35       	cpi	r24, 0x58	; 88
 af8:	79 f0       	breq	.+30     	; 0xb18 <vfprintf+0x27c>
 afa:	ae c0       	rjmp	.+348    	; 0xc58 <vfprintf+0x3bc>
 afc:	80 37       	cpi	r24, 0x70	; 112
 afe:	19 f0       	breq	.+6      	; 0xb06 <vfprintf+0x26a>
 b00:	88 37       	cpi	r24, 0x78	; 120
 b02:	21 f0       	breq	.+8      	; 0xb0c <vfprintf+0x270>
 b04:	a9 c0       	rjmp	.+338    	; 0xc58 <vfprintf+0x3bc>
 b06:	e9 2f       	mov	r30, r25
 b08:	e0 61       	ori	r30, 0x10	; 16
 b0a:	be 2e       	mov	r11, r30
 b0c:	b4 fe       	sbrs	r11, 4
 b0e:	0d c0       	rjmp	.+26     	; 0xb2a <vfprintf+0x28e>
 b10:	fb 2d       	mov	r31, r11
 b12:	f4 60       	ori	r31, 0x04	; 4
 b14:	bf 2e       	mov	r11, r31
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x28e>
 b18:	34 fe       	sbrs	r3, 4
 b1a:	0a c0       	rjmp	.+20     	; 0xb30 <vfprintf+0x294>
 b1c:	29 2f       	mov	r18, r25
 b1e:	26 60       	ori	r18, 0x06	; 6
 b20:	b2 2e       	mov	r11, r18
 b22:	06 c0       	rjmp	.+12     	; 0xb30 <vfprintf+0x294>
 b24:	28 e0       	ldi	r18, 0x08	; 8
 b26:	30 e0       	ldi	r19, 0x00	; 0
 b28:	05 c0       	rjmp	.+10     	; 0xb34 <vfprintf+0x298>
 b2a:	20 e1       	ldi	r18, 0x10	; 16
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x298>
 b30:	20 e1       	ldi	r18, 0x10	; 16
 b32:	32 e0       	ldi	r19, 0x02	; 2
 b34:	f8 01       	movw	r30, r16
 b36:	b7 fe       	sbrs	r11, 7
 b38:	07 c0       	rjmp	.+14     	; 0xb48 <vfprintf+0x2ac>
 b3a:	60 81       	ld	r22, Z
 b3c:	71 81       	ldd	r23, Z+1	; 0x01
 b3e:	82 81       	ldd	r24, Z+2	; 0x02
 b40:	93 81       	ldd	r25, Z+3	; 0x03
 b42:	0c 5f       	subi	r16, 0xFC	; 252
 b44:	1f 4f       	sbci	r17, 0xFF	; 255
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <vfprintf+0x2b8>
 b48:	60 81       	ld	r22, Z
 b4a:	71 81       	ldd	r23, Z+1	; 0x01
 b4c:	80 e0       	ldi	r24, 0x00	; 0
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 5f       	subi	r16, 0xFE	; 254
 b52:	1f 4f       	sbci	r17, 0xFF	; 255
 b54:	a3 01       	movw	r20, r6
 b56:	f1 d0       	rcall	.+482    	; 0xd3a <__ultoa_invert>
 b58:	88 2e       	mov	r8, r24
 b5a:	86 18       	sub	r8, r6
 b5c:	fb 2d       	mov	r31, r11
 b5e:	ff 77       	andi	r31, 0x7F	; 127
 b60:	3f 2e       	mov	r3, r31
 b62:	36 fe       	sbrs	r3, 6
 b64:	0d c0       	rjmp	.+26     	; 0xb80 <vfprintf+0x2e4>
 b66:	23 2d       	mov	r18, r3
 b68:	2e 7f       	andi	r18, 0xFE	; 254
 b6a:	a2 2e       	mov	r10, r18
 b6c:	89 14       	cp	r8, r9
 b6e:	58 f4       	brcc	.+22     	; 0xb86 <vfprintf+0x2ea>
 b70:	34 fe       	sbrs	r3, 4
 b72:	0b c0       	rjmp	.+22     	; 0xb8a <vfprintf+0x2ee>
 b74:	32 fc       	sbrc	r3, 2
 b76:	09 c0       	rjmp	.+18     	; 0xb8a <vfprintf+0x2ee>
 b78:	83 2d       	mov	r24, r3
 b7a:	8e 7e       	andi	r24, 0xEE	; 238
 b7c:	a8 2e       	mov	r10, r24
 b7e:	05 c0       	rjmp	.+10     	; 0xb8a <vfprintf+0x2ee>
 b80:	b8 2c       	mov	r11, r8
 b82:	a3 2c       	mov	r10, r3
 b84:	03 c0       	rjmp	.+6      	; 0xb8c <vfprintf+0x2f0>
 b86:	b8 2c       	mov	r11, r8
 b88:	01 c0       	rjmp	.+2      	; 0xb8c <vfprintf+0x2f0>
 b8a:	b9 2c       	mov	r11, r9
 b8c:	a4 fe       	sbrs	r10, 4
 b8e:	0f c0       	rjmp	.+30     	; 0xbae <vfprintf+0x312>
 b90:	fe 01       	movw	r30, r28
 b92:	e8 0d       	add	r30, r8
 b94:	f1 1d       	adc	r31, r1
 b96:	80 81       	ld	r24, Z
 b98:	80 33       	cpi	r24, 0x30	; 48
 b9a:	21 f4       	brne	.+8      	; 0xba4 <vfprintf+0x308>
 b9c:	9a 2d       	mov	r25, r10
 b9e:	99 7e       	andi	r25, 0xE9	; 233
 ba0:	a9 2e       	mov	r10, r25
 ba2:	09 c0       	rjmp	.+18     	; 0xbb6 <vfprintf+0x31a>
 ba4:	a2 fe       	sbrs	r10, 2
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0x318>
 ba8:	b3 94       	inc	r11
 baa:	b3 94       	inc	r11
 bac:	04 c0       	rjmp	.+8      	; 0xbb6 <vfprintf+0x31a>
 bae:	8a 2d       	mov	r24, r10
 bb0:	86 78       	andi	r24, 0x86	; 134
 bb2:	09 f0       	breq	.+2      	; 0xbb6 <vfprintf+0x31a>
 bb4:	b3 94       	inc	r11
 bb6:	a3 fc       	sbrc	r10, 3
 bb8:	10 c0       	rjmp	.+32     	; 0xbda <vfprintf+0x33e>
 bba:	a0 fe       	sbrs	r10, 0
 bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x32e>
 bbe:	b2 14       	cp	r11, r2
 bc0:	80 f4       	brcc	.+32     	; 0xbe2 <vfprintf+0x346>
 bc2:	28 0c       	add	r2, r8
 bc4:	92 2c       	mov	r9, r2
 bc6:	9b 18       	sub	r9, r11
 bc8:	0d c0       	rjmp	.+26     	; 0xbe4 <vfprintf+0x348>
 bca:	b2 14       	cp	r11, r2
 bcc:	58 f4       	brcc	.+22     	; 0xbe4 <vfprintf+0x348>
 bce:	b6 01       	movw	r22, r12
 bd0:	80 e2       	ldi	r24, 0x20	; 32
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	76 d0       	rcall	.+236    	; 0xcc2 <fputc>
 bd6:	b3 94       	inc	r11
 bd8:	f8 cf       	rjmp	.-16     	; 0xbca <vfprintf+0x32e>
 bda:	b2 14       	cp	r11, r2
 bdc:	18 f4       	brcc	.+6      	; 0xbe4 <vfprintf+0x348>
 bde:	2b 18       	sub	r2, r11
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <vfprintf+0x34a>
 be2:	98 2c       	mov	r9, r8
 be4:	21 2c       	mov	r2, r1
 be6:	a4 fe       	sbrs	r10, 4
 be8:	0f c0       	rjmp	.+30     	; 0xc08 <vfprintf+0x36c>
 bea:	b6 01       	movw	r22, r12
 bec:	80 e3       	ldi	r24, 0x30	; 48
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	68 d0       	rcall	.+208    	; 0xcc2 <fputc>
 bf2:	a2 fe       	sbrs	r10, 2
 bf4:	16 c0       	rjmp	.+44     	; 0xc22 <vfprintf+0x386>
 bf6:	a1 fc       	sbrc	r10, 1
 bf8:	03 c0       	rjmp	.+6      	; 0xc00 <vfprintf+0x364>
 bfa:	88 e7       	ldi	r24, 0x78	; 120
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	02 c0       	rjmp	.+4      	; 0xc04 <vfprintf+0x368>
 c00:	88 e5       	ldi	r24, 0x58	; 88
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	b6 01       	movw	r22, r12
 c06:	0c c0       	rjmp	.+24     	; 0xc20 <vfprintf+0x384>
 c08:	8a 2d       	mov	r24, r10
 c0a:	86 78       	andi	r24, 0x86	; 134
 c0c:	51 f0       	breq	.+20     	; 0xc22 <vfprintf+0x386>
 c0e:	a1 fe       	sbrs	r10, 1
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0x37a>
 c12:	8b e2       	ldi	r24, 0x2B	; 43
 c14:	01 c0       	rjmp	.+2      	; 0xc18 <vfprintf+0x37c>
 c16:	80 e2       	ldi	r24, 0x20	; 32
 c18:	a7 fc       	sbrc	r10, 7
 c1a:	8d e2       	ldi	r24, 0x2D	; 45
 c1c:	b6 01       	movw	r22, r12
 c1e:	90 e0       	ldi	r25, 0x00	; 0
 c20:	50 d0       	rcall	.+160    	; 0xcc2 <fputc>
 c22:	89 14       	cp	r8, r9
 c24:	30 f4       	brcc	.+12     	; 0xc32 <vfprintf+0x396>
 c26:	b6 01       	movw	r22, r12
 c28:	80 e3       	ldi	r24, 0x30	; 48
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	4a d0       	rcall	.+148    	; 0xcc2 <fputc>
 c2e:	9a 94       	dec	r9
 c30:	f8 cf       	rjmp	.-16     	; 0xc22 <vfprintf+0x386>
 c32:	8a 94       	dec	r8
 c34:	f3 01       	movw	r30, r6
 c36:	e8 0d       	add	r30, r8
 c38:	f1 1d       	adc	r31, r1
 c3a:	80 81       	ld	r24, Z
 c3c:	b6 01       	movw	r22, r12
 c3e:	90 e0       	ldi	r25, 0x00	; 0
 c40:	40 d0       	rcall	.+128    	; 0xcc2 <fputc>
 c42:	81 10       	cpse	r8, r1
 c44:	f6 cf       	rjmp	.-20     	; 0xc32 <vfprintf+0x396>
 c46:	22 20       	and	r2, r2
 c48:	09 f4       	brne	.+2      	; 0xc4c <vfprintf+0x3b0>
 c4a:	4e ce       	rjmp	.-868    	; 0x8e8 <vfprintf+0x4c>
 c4c:	b6 01       	movw	r22, r12
 c4e:	80 e2       	ldi	r24, 0x20	; 32
 c50:	90 e0       	ldi	r25, 0x00	; 0
 c52:	37 d0       	rcall	.+110    	; 0xcc2 <fputc>
 c54:	2a 94       	dec	r2
 c56:	f7 cf       	rjmp	.-18     	; 0xc46 <vfprintf+0x3aa>
 c58:	f6 01       	movw	r30, r12
 c5a:	86 81       	ldd	r24, Z+6	; 0x06
 c5c:	97 81       	ldd	r25, Z+7	; 0x07
 c5e:	02 c0       	rjmp	.+4      	; 0xc64 <vfprintf+0x3c8>
 c60:	8f ef       	ldi	r24, 0xFF	; 255
 c62:	9f ef       	ldi	r25, 0xFF	; 255
 c64:	2b 96       	adiw	r28, 0x0b	; 11
 c66:	0f b6       	in	r0, 0x3f	; 63
 c68:	f8 94       	cli
 c6a:	de bf       	out	0x3e, r29	; 62
 c6c:	0f be       	out	0x3f, r0	; 63
 c6e:	cd bf       	out	0x3d, r28	; 61
 c70:	df 91       	pop	r29
 c72:	cf 91       	pop	r28
 c74:	1f 91       	pop	r17
 c76:	0f 91       	pop	r16
 c78:	ff 90       	pop	r15
 c7a:	ef 90       	pop	r14
 c7c:	df 90       	pop	r13
 c7e:	cf 90       	pop	r12
 c80:	bf 90       	pop	r11
 c82:	af 90       	pop	r10
 c84:	9f 90       	pop	r9
 c86:	8f 90       	pop	r8
 c88:	7f 90       	pop	r7
 c8a:	6f 90       	pop	r6
 c8c:	5f 90       	pop	r5
 c8e:	4f 90       	pop	r4
 c90:	3f 90       	pop	r3
 c92:	2f 90       	pop	r2
 c94:	08 95       	ret

00000c96 <strnlen_P>:
 c96:	fc 01       	movw	r30, r24
 c98:	05 90       	lpm	r0, Z+
 c9a:	61 50       	subi	r22, 0x01	; 1
 c9c:	70 40       	sbci	r23, 0x00	; 0
 c9e:	01 10       	cpse	r0, r1
 ca0:	d8 f7       	brcc	.-10     	; 0xc98 <strnlen_P+0x2>
 ca2:	80 95       	com	r24
 ca4:	90 95       	com	r25
 ca6:	8e 0f       	add	r24, r30
 ca8:	9f 1f       	adc	r25, r31
 caa:	08 95       	ret

00000cac <strnlen>:
 cac:	fc 01       	movw	r30, r24
 cae:	61 50       	subi	r22, 0x01	; 1
 cb0:	70 40       	sbci	r23, 0x00	; 0
 cb2:	01 90       	ld	r0, Z+
 cb4:	01 10       	cpse	r0, r1
 cb6:	d8 f7       	brcc	.-10     	; 0xcae <strnlen+0x2>
 cb8:	80 95       	com	r24
 cba:	90 95       	com	r25
 cbc:	8e 0f       	add	r24, r30
 cbe:	9f 1f       	adc	r25, r31
 cc0:	08 95       	ret

00000cc2 <fputc>:
 cc2:	0f 93       	push	r16
 cc4:	1f 93       	push	r17
 cc6:	cf 93       	push	r28
 cc8:	df 93       	push	r29
 cca:	fb 01       	movw	r30, r22
 ccc:	23 81       	ldd	r18, Z+3	; 0x03
 cce:	21 fd       	sbrc	r18, 1
 cd0:	03 c0       	rjmp	.+6      	; 0xcd8 <fputc+0x16>
 cd2:	8f ef       	ldi	r24, 0xFF	; 255
 cd4:	9f ef       	ldi	r25, 0xFF	; 255
 cd6:	2c c0       	rjmp	.+88     	; 0xd30 <fputc+0x6e>
 cd8:	22 ff       	sbrs	r18, 2
 cda:	16 c0       	rjmp	.+44     	; 0xd08 <fputc+0x46>
 cdc:	46 81       	ldd	r20, Z+6	; 0x06
 cde:	57 81       	ldd	r21, Z+7	; 0x07
 ce0:	24 81       	ldd	r18, Z+4	; 0x04
 ce2:	35 81       	ldd	r19, Z+5	; 0x05
 ce4:	42 17       	cp	r20, r18
 ce6:	53 07       	cpc	r21, r19
 ce8:	44 f4       	brge	.+16     	; 0xcfa <fputc+0x38>
 cea:	a0 81       	ld	r26, Z
 cec:	b1 81       	ldd	r27, Z+1	; 0x01
 cee:	9d 01       	movw	r18, r26
 cf0:	2f 5f       	subi	r18, 0xFF	; 255
 cf2:	3f 4f       	sbci	r19, 0xFF	; 255
 cf4:	31 83       	std	Z+1, r19	; 0x01
 cf6:	20 83       	st	Z, r18
 cf8:	8c 93       	st	X, r24
 cfa:	26 81       	ldd	r18, Z+6	; 0x06
 cfc:	37 81       	ldd	r19, Z+7	; 0x07
 cfe:	2f 5f       	subi	r18, 0xFF	; 255
 d00:	3f 4f       	sbci	r19, 0xFF	; 255
 d02:	37 83       	std	Z+7, r19	; 0x07
 d04:	26 83       	std	Z+6, r18	; 0x06
 d06:	14 c0       	rjmp	.+40     	; 0xd30 <fputc+0x6e>
 d08:	8b 01       	movw	r16, r22
 d0a:	ec 01       	movw	r28, r24
 d0c:	fb 01       	movw	r30, r22
 d0e:	00 84       	ldd	r0, Z+8	; 0x08
 d10:	f1 85       	ldd	r31, Z+9	; 0x09
 d12:	e0 2d       	mov	r30, r0
 d14:	09 95       	icall
 d16:	89 2b       	or	r24, r25
 d18:	e1 f6       	brne	.-72     	; 0xcd2 <fputc+0x10>
 d1a:	d8 01       	movw	r26, r16
 d1c:	16 96       	adiw	r26, 0x06	; 6
 d1e:	8d 91       	ld	r24, X+
 d20:	9c 91       	ld	r25, X
 d22:	17 97       	sbiw	r26, 0x07	; 7
 d24:	01 96       	adiw	r24, 0x01	; 1
 d26:	17 96       	adiw	r26, 0x07	; 7
 d28:	9c 93       	st	X, r25
 d2a:	8e 93       	st	-X, r24
 d2c:	16 97       	sbiw	r26, 0x06	; 6
 d2e:	ce 01       	movw	r24, r28
 d30:	df 91       	pop	r29
 d32:	cf 91       	pop	r28
 d34:	1f 91       	pop	r17
 d36:	0f 91       	pop	r16
 d38:	08 95       	ret

00000d3a <__ultoa_invert>:
 d3a:	fa 01       	movw	r30, r20
 d3c:	aa 27       	eor	r26, r26
 d3e:	28 30       	cpi	r18, 0x08	; 8
 d40:	51 f1       	breq	.+84     	; 0xd96 <__ultoa_invert+0x5c>
 d42:	20 31       	cpi	r18, 0x10	; 16
 d44:	81 f1       	breq	.+96     	; 0xda6 <__ultoa_invert+0x6c>
 d46:	e8 94       	clt
 d48:	6f 93       	push	r22
 d4a:	6e 7f       	andi	r22, 0xFE	; 254
 d4c:	6e 5f       	subi	r22, 0xFE	; 254
 d4e:	7f 4f       	sbci	r23, 0xFF	; 255
 d50:	8f 4f       	sbci	r24, 0xFF	; 255
 d52:	9f 4f       	sbci	r25, 0xFF	; 255
 d54:	af 4f       	sbci	r26, 0xFF	; 255
 d56:	b1 e0       	ldi	r27, 0x01	; 1
 d58:	3e d0       	rcall	.+124    	; 0xdd6 <__ultoa_invert+0x9c>
 d5a:	b4 e0       	ldi	r27, 0x04	; 4
 d5c:	3c d0       	rcall	.+120    	; 0xdd6 <__ultoa_invert+0x9c>
 d5e:	67 0f       	add	r22, r23
 d60:	78 1f       	adc	r23, r24
 d62:	89 1f       	adc	r24, r25
 d64:	9a 1f       	adc	r25, r26
 d66:	a1 1d       	adc	r26, r1
 d68:	68 0f       	add	r22, r24
 d6a:	79 1f       	adc	r23, r25
 d6c:	8a 1f       	adc	r24, r26
 d6e:	91 1d       	adc	r25, r1
 d70:	a1 1d       	adc	r26, r1
 d72:	6a 0f       	add	r22, r26
 d74:	71 1d       	adc	r23, r1
 d76:	81 1d       	adc	r24, r1
 d78:	91 1d       	adc	r25, r1
 d7a:	a1 1d       	adc	r26, r1
 d7c:	20 d0       	rcall	.+64     	; 0xdbe <__ultoa_invert+0x84>
 d7e:	09 f4       	brne	.+2      	; 0xd82 <__ultoa_invert+0x48>
 d80:	68 94       	set
 d82:	3f 91       	pop	r19
 d84:	2a e0       	ldi	r18, 0x0A	; 10
 d86:	26 9f       	mul	r18, r22
 d88:	11 24       	eor	r1, r1
 d8a:	30 19       	sub	r19, r0
 d8c:	30 5d       	subi	r19, 0xD0	; 208
 d8e:	31 93       	st	Z+, r19
 d90:	de f6       	brtc	.-74     	; 0xd48 <__ultoa_invert+0xe>
 d92:	cf 01       	movw	r24, r30
 d94:	08 95       	ret
 d96:	46 2f       	mov	r20, r22
 d98:	47 70       	andi	r20, 0x07	; 7
 d9a:	40 5d       	subi	r20, 0xD0	; 208
 d9c:	41 93       	st	Z+, r20
 d9e:	b3 e0       	ldi	r27, 0x03	; 3
 da0:	0f d0       	rcall	.+30     	; 0xdc0 <__ultoa_invert+0x86>
 da2:	c9 f7       	brne	.-14     	; 0xd96 <__ultoa_invert+0x5c>
 da4:	f6 cf       	rjmp	.-20     	; 0xd92 <__ultoa_invert+0x58>
 da6:	46 2f       	mov	r20, r22
 da8:	4f 70       	andi	r20, 0x0F	; 15
 daa:	40 5d       	subi	r20, 0xD0	; 208
 dac:	4a 33       	cpi	r20, 0x3A	; 58
 dae:	18 f0       	brcs	.+6      	; 0xdb6 <__ultoa_invert+0x7c>
 db0:	49 5d       	subi	r20, 0xD9	; 217
 db2:	31 fd       	sbrc	r19, 1
 db4:	40 52       	subi	r20, 0x20	; 32
 db6:	41 93       	st	Z+, r20
 db8:	02 d0       	rcall	.+4      	; 0xdbe <__ultoa_invert+0x84>
 dba:	a9 f7       	brne	.-22     	; 0xda6 <__ultoa_invert+0x6c>
 dbc:	ea cf       	rjmp	.-44     	; 0xd92 <__ultoa_invert+0x58>
 dbe:	b4 e0       	ldi	r27, 0x04	; 4
 dc0:	a6 95       	lsr	r26
 dc2:	97 95       	ror	r25
 dc4:	87 95       	ror	r24
 dc6:	77 95       	ror	r23
 dc8:	67 95       	ror	r22
 dca:	ba 95       	dec	r27
 dcc:	c9 f7       	brne	.-14     	; 0xdc0 <__ultoa_invert+0x86>
 dce:	00 97       	sbiw	r24, 0x00	; 0
 dd0:	61 05       	cpc	r22, r1
 dd2:	71 05       	cpc	r23, r1
 dd4:	08 95       	ret
 dd6:	9b 01       	movw	r18, r22
 dd8:	ac 01       	movw	r20, r24
 dda:	0a 2e       	mov	r0, r26
 ddc:	06 94       	lsr	r0
 dde:	57 95       	ror	r21
 de0:	47 95       	ror	r20
 de2:	37 95       	ror	r19
 de4:	27 95       	ror	r18
 de6:	ba 95       	dec	r27
 de8:	c9 f7       	brne	.-14     	; 0xddc <__ultoa_invert+0xa2>
 dea:	62 0f       	add	r22, r18
 dec:	73 1f       	adc	r23, r19
 dee:	84 1f       	adc	r24, r20
 df0:	95 1f       	adc	r25, r21
 df2:	a0 1d       	adc	r26, r0
 df4:	08 95       	ret

00000df6 <_exit>:
 df6:	f8 94       	cli

00000df8 <__stop_program>:
 df8:	ff cf       	rjmp	.-2      	; 0xdf8 <__stop_program>
